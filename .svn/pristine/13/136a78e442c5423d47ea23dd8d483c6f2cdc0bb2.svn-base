package kr.or.ddit.community.board.service.impl;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

import javax.inject.Inject;

import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

import kr.or.ddit.bbscommon.BbsAtchVO;
import kr.or.ddit.bbscommon.CommonFile;
import kr.or.ddit.community.board.mapper.BoardMapper;
import kr.or.ddit.community.board.service.BoardService;
import kr.or.ddit.community.board.vo.BoardVO;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class BoardServiceImpl implements BoardService {
	
	@Inject
	BoardMapper boardMapper;
	
	//리스트
	@Override
	public List<BoardVO> list(){
		return this.boardMapper.list();
	}

	//상세내역
	@Override
	public BoardVO detail(BoardVO boardVO) {
		return this.boardMapper.detail(boardVO);
	}

	//등록
	@Override
	public int register(BoardVO boardVO) {
		int result = this.boardMapper.register(boardVO);
		
		MultipartFile[] multipartFiles = boardVO.getAttachFiles();
		
		//연월일 폴더 생성
		File savePath = new File(CommonFile.uploadFolder, CommonFile.getFolder());
		if(savePath.exists()==false) {
			savePath.mkdirs();
		}
		
		List<BbsAtchVO> bbsAtchVO = new ArrayList<BbsAtchVO>();
		int seq = 1;
		for(MultipartFile file : multipartFiles) {
			BbsAtchVO vo = new BbsAtchVO();
			
			vo.setBbsFlNo(seq++);
			vo.setFileNm(file.getOriginalFilename());
			UUID uuid = UUID.randomUUID(); 
			vo.setFileUuid(uuid.toString()+"_"+file.getOriginalFilename());
			vo.setFilePath("/" + CommonFile.getFolder().replace("\\", "/") + "/" + uuid.toString()+"_"+file.getOriginalFilename());
			vo.setFileExtn(file.getContentType());
			vo.setFileSize(file.getSize());
			vo.setPstNo(boardVO.getPstNo());
			
			bbsAtchVO.add(vo);
			
			String path = CommonFile.uploadFolder + "/" + CommonFile.getFolder().replace("\\", "/") + "/" + uuid.toString() + "_" + file.getOriginalFilename();
			
			File f = new File(path);
			
			try {
				file.transferTo(f);
			} catch (IllegalStateException | IOException e) {
				e.printStackTrace();
			}
			
		}
		log.info("bbsAtchVO.get(0).getFileNm().length()" + bbsAtchVO.get(0).getFileNm().length());
		
		if(bbsAtchVO.get(0).getFileNm().length()>0) {
			boardVO.setBbsAtchVO(bbsAtchVO);
			
			log.info("boardVO" + boardVO);
			
			result += this.boardMapper.insertAttachFiles(boardVO);
			
		}
		
		return result;
	}
}
